server {
    listen         80;
    server_name    redmine.local;
#   return         301 https://$server_name$request_uri;

    error_page   500 502 503 504  /50x.html;
    
            # Кешировать указанные коды ответов 5 минут
     proxy_cache_valid 200 301 302 304 5m;
        # Ключ по которому сохраняются и берутся данные из кеша
#    proxy_cache_key "$request_method|$http_if_modified_since|$http_if_none_match|$host|$request_uri";
        # Защита от раздачи одинаковой куки в кешированном ответе
#    proxy_hide_header "Set-Cookie";
        # Игнорировать параметры кеша заданные бекэндом
#    proxy_ignore_headers "Cache-Control" "Expires";

        # Указывает в каких случаях клиенту можно отдать несвежий ответ из кеша
#    proxy_cache_use_stale error timeout invalid_header http_500 http_502 http_503 http_504;

        # активировать зону кеширования pagecache
        proxy_cache	pagecache;
    

    location / {
         proxy_pass   http://172.17.0.1:3128;
    }


}


server {
    listen       443 ssl http2;
    server_name  redmine.local;
    ssl_certificate /etc/nginx/nitra.ua.crt;
    ssl_certificate_key /etc/nginx/nitra.ua.key;

    #charset koi8-r;
    #access_log  /var/log/nginx/log/host.access.log  main;

     error_page   500 502 503 504  /50x.html;
     
             # Кешировать указанные коды ответов 5 минут
     proxy_cache_valid 200 301 302 304 5m;
        # Ключ по которому сохраняются и берутся данные из кеша
#    proxy_cache_key "$request_method|$http_if_modified_since|$http_if_none_match|$host|$request_uri";
        # Защита от раздачи одинаковой куки в кешированном ответе
#    proxy_hide_header "Set-Cookie";
        # Игнорировать параметры кеша заданные бекэндом
#    proxy_ignore_headers "Cache-Control" "Expires";

        # Указывает в каких случаях клиенту можно отдать несвежий ответ из кеша
#    proxy_cache_use_stale error timeout invalid_header http_500 http_502 http_503 http_504;

        # активировать зону кеширования pagecache
        proxy_cache	pagecache;

    location / {
         proxy_pass   http://172.17.0.1:3128;
    }
}

